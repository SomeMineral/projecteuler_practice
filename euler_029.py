###############################################################################
# 029 Distinct powers
'''
Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
    2**2=4, 2**3=8, 2**4=16, 2**5=32
    3**2=9, 3**3=27, 3**4=81, 3**5=243
    4**2=16, 4**3=64, 4**4=256, 4**5=1024
    5**2=25, 5**3=125, 5**4=625, 5**5=3125
If they are then placed in numerical order, with any repeats removed,
 we get the following sequence of 15 distinct terms:
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

'''

# log10(a**b) = b * log10(a)
import numpy as np

def int_comb(a,b):
    temp_list = []
    for i in range(2,a+1):
        for j in range(2,b+1):
            temp_list.append(j*np.log2(i)) 
            # log10 사용했을 땐 큰 수에서 안 맞더니...
            # log2 사용하면 잘 나오네. 이진법 사용해서 그런가.
    
    return len(set(temp_list))

print(int_comb(5,5)) # 15
print(int_comb(100,100)) # 9183